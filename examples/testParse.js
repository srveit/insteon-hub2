'use strict'
const parsePlmBuffer = require('./lib/parsePlmBuffer')

const testParse = () => {
  const buffers = [
    '026A1502504A1AB6000001CF170102504A1AB6000001CF180002504A1AB6000001CF170102504A1AB6000001CF180002504A1AB6000001CF170102504A1AB6000001CF180002504A1AB6000001CF130002504A1AB649EA7040130102504A1AB6130201CF060002624A1AB60519000602504A1AB649EA70200000025049C2B7000001CF1100025049C2B7110101CF0600025049C2B7000001CF1300025049C2B7130101CF0600026249C2B705190006025049C2B749EA702000000252FF800252FF800252FF80',
    '0264000006025300014A0A08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001E',
    '0265060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006',
    '02650602624A0A08050D0006025C4A0A0849EA70230D0002624A0A08050D000602504A0A0849EA702F0D0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056',
    '026401000602504A0A080120458F0182025301004A0A08012045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034',
    '0269060257E2004B2BA60139440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001A',

    '02620102030F117F06',
    '026101110106',
    '026101110115',
    '025009316B09D682611101',
    '02620E79860F11FF0602500E798609D6822B11FF',
    '026401890602640101060253010108B6EA010195',
    '02620E79860F10000602500E798609D6822B100002500E798601009C8B0100',
    '02620E79860F19000602500E798609D6822B03FF',
    '025402025424025413',
    '02540202540202540202540202770006027700060277000602770006027700060277000602770006025402025402025402',
    '0257E2004A0A08012045026A060257A2014A0A08000000026A060257A20149C2B7000000026A060257E2004A209A012045026A060257A2014A209A000000026A15027F0206025403025404027700062D2D000000026A060257E2004B2FC6013944',
    '02514B2BA649EA701103000000000002394400000000000000',
    '02550260026049EA700333A306',
    '0263128006026312000602670602683406',
    '025601164A3A6F025806025815026601394406',
    '026BF006026C06026D06026E06',
    '026FFF80674A3A6F01020306026BF006',
    '026F20E2674B2BA6013944060270340602713456060272060273F000000602771206027F4506025C4A1AB6000001CF1701025C4A0A0849EA70230D00',
    '025C36E5CC301E73231000',
    '026101120015',
    '02740602504B2D2C49EA70601100000000',
  ]
  let command
  buffers.forEach((buffer) => {
    console.log('#####################')
    do {
      ;({ buffer, command } = parsePlmBuffer(buffer, command))
      console.log(command)
    } while (command)
  })
}

testParse()
